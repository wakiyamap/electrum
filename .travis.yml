dist: bionic
git:
  depth: false
cache:
  - pip: true
  - directories:
    - /tmp/electrum-build
jobs:
  include:
    - stage: binary builds
      if: (branch = master) OR (tag IS present)
      name: "Windows build"
      language: c
      python: false
      env:
        - TARGET_OS=Windows
      services:
        - docker
      before_install:  # we need a newer version of docker; 20.10+ seems to work
        - sudo rm -rf /var/lib/apt/lists/*
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get update
        - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
        - docker version
      script:
        - ELECBUILD_COMMIT=HEAD ./contrib/build-wine/build.sh
      after_success: true
    - if: (branch = master) OR (tag IS present)
      name: "Android build"
      language: python
      python: 3.7
      services:
        - docker
      script:
        - sudo chown -R 1000:1000 .
        # Output something every minute or Travis kills the job
        - while sleep 60; do echo "=====[ $SECONDS seconds still running ]====="; done &
        - ELECBUILD_COMMIT=HEAD ./contrib/android/build.sh
        # kill background sleep loop
        - kill %1
        - ls -la dist
        - if [ $(ls dist | grep -c Electrum-*) -eq 0 ]; then exit 1; fi
      after_success: true
      # disabled for now as travis started to always time out:
    - if: false AND ((branch = master) OR (tag IS present))
      name: "MacOS build"
      os: osx
      language: c
      env:
        - TARGET_OS=macOS
      python: false
      install:
        - git fetch --all --tags
      script:
        # Output something every minute or Travis kills the job
        - while sleep 60; do echo "=====[ $SECONDS seconds still running ]====="; done &
        - ./contrib/osx/make_osx
        # kill background sleep loop
        - kill %1
      cache:
        directories:
          - $HOME/.cache/pip
      after_script: ls -lah dist && md5 dist/*
      after_success: true
    - if: (branch = master) OR (tag IS present)
      name: "AppImage build"
      language: c
      python: false
      services:
        - docker
      script:
        - ELECBUILD_COMMIT=HEAD ./contrib/build-linux/appimage/build.sh
      after_success: true
    - if: (branch = master) OR (tag IS present)
      name: "tarball build"
      language: c
      python: false
      services:
        - docker
      script:
        - ELECBUILD_COMMIT=HEAD ./contrib/build-linux/sdist/build.sh
      after_success: true
    - stage: release check
      install:
          - git fetch --all --tags
      script:
        - ./contrib/deterministic-build/check_submodules.sh
      after_success: true
      if: tag IS present
